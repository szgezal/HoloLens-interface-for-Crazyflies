//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.UnityRoboticsDemo
{
    [Serializable]
    public class MeasurementPointMsg : Message
    {
        public const string k_RosMessageName = "unity_robotics_demo_msgs/MeasurementPoint";
        public override string RosMessageName => k_RosMessageName;

        public int index;
        public float min_distance;
        public Geometry.PointMsg trajectory_point;
        public Geometry.PointMsg closest_position;

        public MeasurementPointMsg()
        {
            this.index = 0;
            this.min_distance = 0.0f;
            this.trajectory_point = new Geometry.PointMsg();
            this.closest_position = new Geometry.PointMsg();
        }

        public MeasurementPointMsg(int index, float min_distance, Geometry.PointMsg trajectory_point, Geometry.PointMsg closest_position)
        {
            this.index = index;
            this.min_distance = min_distance;
            this.trajectory_point = trajectory_point;
            this.closest_position = closest_position;
        }

        public static MeasurementPointMsg Deserialize(MessageDeserializer deserializer) => new MeasurementPointMsg(deserializer);

        private MeasurementPointMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.index);
            deserializer.Read(out this.min_distance);
            this.trajectory_point = Geometry.PointMsg.Deserialize(deserializer);
            this.closest_position = Geometry.PointMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.index);
            serializer.Write(this.min_distance);
            serializer.Write(this.trajectory_point);
            serializer.Write(this.closest_position);
        }

        public override string ToString()
        {
            return "MeasurementPointMsg: " +
            "\nindex: " + index.ToString() +
            "\nmin_distance: " + min_distance.ToString() +
            "\ntrajectory_point: " + trajectory_point.ToString() +
            "\nclosest_position: " + closest_position.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
